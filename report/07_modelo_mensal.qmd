---
title: "Início da criação do modelo mensal estadual"
format: html
editor: visual
---

## Coleta de dados

```{r}
library(tidyverse)
library(roadtrafficdeaths)
library(here)
library(rvest)
library(archive)
```

### DataSUS

```{r}
rtdeaths |> head()
```

```{r}
mortes <- rtdeaths |> 
  mutate(mes_ocorrencia = month(data_ocorrencia)) |> 
  count(mes_ocorrencia, ano_ocorrencia) |> 
  arrange(ano_ocorrencia) |> 
  mutate(data = paste0(as.character(mes_ocorrencia),
                       "-",
                       as.character(ano_ocorrencia)),
         data = my(data))

mortes
```

```{r}
ggplot(mortes, aes(x = data, y = n)) + geom_line()
```

```{r}
library(forecast)
tseries <- ts(data = mortes$n, start = c(1996,1), end = c(2021,12), frequency = 12)
plot(tseries)

fit <- stl(tseries, s.window = "periodic")
plot(fit)
monthplot(tseries)
```

```{r}
tseries_dec <- tseries |> decompose()

autoplot(tseries_dec$seasonal, )
autoplot(tseries_dec$trend, )
autoplot(tseries_dec$random, )
```

### PRF

```{r}
prf_filepaths <- paste0(
  here("data-raw","datatran//"),
  list.files(here("data-raw/datatran"))
)

prf_filepaths
```

```{r}
prf_temp <- lapply(prf_filepaths, 
                read_delim, 
                delim = ";", 
                locale = locale(decimal_mark = ",",
                                encoding = "Latin1",
                                date_format = "%d/%m/%Y"))

prf_temp[[10]] <-  prf_temp[[10]] |> mutate(data_inversa = dmy(data_inversa))
```

```{r}
prf <- prf_temp |> lapply(select, data_inversa, uf, causa_acidente, tipo_acidente, classificacao_acidente, pessoas, mortos, feridos)

prf <- reduce(prf, full_join)
```

```{r}
prf_data <- prf |> mutate(
  ano = year(data_inversa),
  mes = month(data_inversa),
  classificacao_acidente = case_when(
    classificacao_acidente %in% c("(null)","Ignorado",NA) & mortos > 0 ~ "Com Vítimas Fatais",
    classificacao_acidente %in% c("(null)","Ignorado",NA) & mortos == 0 & feridos > 0 ~ "Com Vítimas Feridas",
    classificacao_acidente %in% c("(null)","Ignorado",NA) & mortos == 0 & feridos == 0 ~ "Sem Vítimas",
    TRUE ~ classificacao_acidente
  )
)
```

```{r}
sinistros_prf <- prf_data |> 
  summarise(
    .by = c("mes", "ano"),
    acidentes = n(),
    acidentes_fatais = sum(classificacao_acidente == "Com Vítimas Fatais"),
    feridos = sum(feridos),
    mortes = sum(mortos)
  ) |> 
  arrange(ano,mes) |> 
  mutate(data = my(paste0(mes,"-",ano)))

sinistros_prf
```

```{r}
sinistros_prf |> 
  select(-c(mes,ano)) |> 
  pivot_longer(-data) |> 
  ggplot(aes(x = data, y = value, color = name)) +
  geom_point() +
  geom_line()

```

### Frota

```{r}
page_list <- c(
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2013",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2014",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2015",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2016",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2017",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2018",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2019",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2020",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2021"
)

page <- read_html(page_list[10])

file_list <- page |>  
  html_elements("a") |> 
  html_attr("href")

text_list <- page |> 
  html_elements("a") |> 
  html_text2()

ids <- text_list |> 
  tolower() |> 
  str_detect("por (município|municipio)") |> 
  which(TRUE)
  
file_paths <- file_list[ids]

files_ext <- tools::file_ext(file_paths)

files_ext
```

```{r}
read_fleet_old <- function(file) {
  
  ext <- tools::file_ext(file)
  
  if (ext == "zip") {
    
    temp <- tempfile()
    
    download.file(file, destfile = temp)
    
    file_name <- unzip(temp, list = T)$Name
    
    unzip(temp, exdir = tempdir())
    
    data <- readxl::read_excel(
      paste0(tempdir(),"/",file_name),
      sheet = 2,
      skip = 3
    )
    
    unlink(paste0(tempdir(),"/",file_name))
    unlink(temp)
  } 
  
  else if (ext == "xlsx") {
    
    name <- "tempfile.xlsx"
    
    download.file(file, destfile = name, mode = "wb")
    
    data <- readxl::read_excel(name, sheet = 2, skip = 3)  
    
    unlink(name)
  }
  
  else if (ext == "xls") {
    
    name <- "tempfile.xls"
    
    download.file(file, destfile = name, mode = "wb")
    
    data <- readxl::read_excel(name, sheet = 1, skip = 2)
    
    unlink(name)
  }
  
  else { data <- 0 }
  
  return(data)
}
```

```{r}
read_fleet <- function(file) {
  
  ext <- tools::file_ext(file)
  
  if (ext == "zip") {
    
    temp <- tempfile()
    
    download.file(file, destfile = temp)
    
    file_name <- unzip(temp, list = T)$Name
    
    unzip(temp, exdir = tempdir())
    
    data <- readxl::read_excel(
      paste0(tempdir(),"/",file_name),
      sheet = 2,
      skip = 3
    )
    
    unlink(paste0(tempdir(),"/",file_name))
    unlink(temp)
    
    return(data)
  } 
  
  else if (ext == "xlsx") {
    
    tryCatch(
      expr = {
        name <- "tempfile.xlsx"
    
        download.file(file, destfile = name, mode = "wb")
    
        data <- readxl::read_excel(name, sheet = 2, skip = 3)  
    
        unlink(name)
    
        return(data)
      },
      error = function(e) {
        name <- "tempfile.xlsx"
    
        download.file(file, destfile = name, mode = "wb")
    
        data <- readxl::read_excel(name, sheet = 1, skip = 3)  
    
        unlink(name)
    
        return(data)
      }
    )
    
  }
  
  else if (ext == "xls") {
    
    name <- "tempfile.xls"
    
    download.file(file, destfile = name, mode = "wb")
    
    data <- readxl::read_excel(name, sheet = 1, skip = 2)
    
    unlink(name)
    
    return(data)
  }
  
  else { 
    data <- 0
    return(data)
  }
}
```

```{r}
fleet_links <- function(url) {
  page <- read_html(url)
  
  links <- page |>  
   html_elements("a") |> 
   html_attr("href")
  
  link_texts <- page |>  
    html_elements("a") |> 
    html_text2()
  
  ids <- link_texts |> 
    tolower() |> 
    str_detect("por (município|municipio)") |> 
    which(TRUE)
  
  files <- links[ids]
  
  return(files)
}
```

```{r}
page_list <- c(
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2013",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2014",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2015",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2016",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2017",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2018",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2019",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2020",
  "https://www.gov.br/transportes/pt-br/assuntos/transito/conteudo-Senatran/frota-de-veiculos-2021"
)
```

```{r}
num <- 9

read_fleet_page <- function(page) {
  links <- fleet_links(page)
  
  frota <- lapply(links, read_fleet)
  
  for (i in seq(length(frota),1,-1)) {
    frota[[i]]$MES <- i
    frota[[i]]$ANO <- as.numeric(str_extract(page_list[num], "(1|2)\\d{3}"))
  }
  
  return(frota)
}

read_fleet_page(page_list[1])
```

### Script

```{r}
read_fleet2011 <- function() {
  
  path <- here("data-raw","frota_mensal","frota_2011","Frota Munic. 2011")
  
  links <- paste0(
    path,
    list.files(here("data-raw","frota_mensal","frota_2011","Frota Munic. 2011"))
  )
  
  return(links)
}

read_fleet2011()
```

