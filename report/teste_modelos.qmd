---
title: "Teste de Modelos"
format: html
editor: visual
---

Testar diferentes modelos e receitas de pré-processamento para melhorar o desempenho

## Setup e Importação

```{r}
library(tidyverse)
library(tidymodels)
library(here)
library(knitr)
tidymodels_prefer()
options(scipen = 999)
```

```{r}
load(here("data","tabela_total.rda"))
```

## Receitas

```{r}
receita_mortes <- df_total |> 
  recipe(
    mortes ~ 
      automovel +
      motocicleta +
      veiculos_total +
      pib +
      populacao +
      qnt_acidentes +
      qnt_feridos +
      qnt_acidentes_fatais +
      qnt_mortos +
      condutores +
      quilometragem_10_bilhoes
  ) |> 
  step_naomit(all_numeric()) |>
  step_normalize(all_numeric_predictors())

receita_taxa <- df_total |> 
  recipe(
    mortos_por_pop ~ 
      automovel +
      motocicleta +
      veiculos_total +
      pib +
      populacao +
      qnt_acidentes +
      qnt_feridos +
      qnt_acidentes_fatais +
      qnt_mortos +
      condutores +
      quilometragem_10_bilhoes
  ) |> 
  step_naomit(all_numeric()) |>
  step_normalize(all_numeric_predictors())
```

## Métricas

```{r}
metricas <- metric_set(rmse, mae, rsq)
```

## Modelos

```{r}
modelo_linear_lm <- linear_reg() |> set_engine("lm")

modelo_randforest <- rand_forest(
  mode = "regression",
  mtry = 3,
  trees = 1000
) |> set_engine("ranger")
```

## Workflows

```{r}
linear_wflow <- workflow() |> 
  add_recipe(receita_mortes) |> 
  add_model(modelo_linear_lm)

randforest_wflow <- workflow() |> 
  add_recipe(receita_mortes) |> 
  add_model(modelo_randforest)
```

## Treinamento

```{r}
linear_wflow_fit <- linear_wflow |> 
  fit(df_total)

randforest_wflow_fit <- randforest_wflow |> 
  fit(df_total)
```

## Predição

```{r}
linear_pred <- linear_wflow_fit |> 
  predict(df_total) |> 
  cbind(df_total)

randforest_pred <- randforest_wflow_fit |> 
  predict(df_total |> drop_na())
randforest_pred <- cbind(randforest_pred, df_total |> drop_na())
```

## Avaliação

```{r}
metricas(linear_pred, mortes, .pred)
linear_wflow_fit |> tidy()
```

```{r}
metricas(randforest_pred, mortes, .pred)
randforest_wflow_fit
```

## Visualização

```{r}
linear_pred |> 
  ggplot(aes(x = ano, y = mortes)) +
    geom_line() +
    geom_point() +
    geom_line(aes(y = .pred), color = "red") +
    geom_point(aes(y = .pred), color = "red")

linear_pred |> 
  ggplot(aes(x = mortes, y = .pred)) +
    geom_point() +
    geom_abline(intercept = 0, slope = 1, color = "red")
```

```{r}
randforest_pred |> 
  ggplot(aes(x = ano, y = mortes)) +
    geom_line() +
    geom_point() +
    geom_line(aes(y = .pred), color = "red") +
    geom_point(aes(y = .pred), color = "red")

randforest_pred |> 
  ggplot(aes(x = mortes, y = .pred)) +
    geom_point() +
    geom_abline(intercept = 0, slope = 1, color = "red")
```

